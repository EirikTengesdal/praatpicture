% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/praatpicture.R
\name{praatpicture}
\alias{praatpicture}
\title{Make Praat Picture style plots of acoustic data}
\usage{
praatpicture(
  sound,
  start = 0,
  end = Inf,
  tfrom0 = TRUE,
  frames = c("sound", "spectrogram", "TextGrid"),
  proportion = c(30, 50, 20),
  tiers = 1,
  focus_tier = tiers[1],
  tier_names = TRUE,
  freqrange = c(0, 5000),
  windowlength = 0.005,
  dynamicrange = 50,
  timestep = 1000,
  windowshape = "Gaussian",
  pitchtype = "draw",
  pitchscale = "hz",
  pitchrange = c(50, 500),
  semitones_re = 100,
  formant_dynrange = 30,
  formantrange = c(50, 5500),
  formanttype = "speckle",
  formants_on_spec = FALSE,
  intensityrange = NULL,
  draw_rectangle = NULL,
  draw_arrow = NULL,
  tg_alignment = "central",
  ...
)
}
\arguments{
\item{sound}{String giving the file name of a sound file with the .wav or
.mp3 extension.}

\item{start}{Start time (in seconds) of desired plotted area. Default is \code{0}.}

\item{end}{End time (in seconds) of desired plotted area. Default is \code{Inf}
(= the entire file).}

\item{tfrom0}{Logical; should time on the x-axis run from 0 or from the
original time? Default is \code{TRUE}.}

\item{frames}{String or vector of strings giving the frames that the plot
should consist of. Default is \code{sound}, \code{spectrogram}, \code{TextGrid}. This
requires a file with the extension \code{.TextGrid} and the same base name as the
sound file. Other options are \code{pitch}, \code{formant}, and \code{intensity}. For these,
files with the same base name as the sound file and the extensions
\code{.PitchTier}, \code{.Formant}, and \code{.IntensityTier} are required, respectively.
These will be plotted in the given order from top to bottom.}

\item{proportion}{Integer or vector of integers of the same size as \code{frames}
giving the proportion in percents of the plotting area to be taken up by the
individual frames. The numbers should sum up to 100.
Default is \code{c(30,50,20)}. If more or less than three
frames are plotted and no proportions are given, frames will be of equal
size.}

\item{tiers}{Vector of number or strings giving either numeric identifiers
of TextGrid tiers to plot or the names of TextGrid tiers to plot. Default is
\code{1}, which plots just the first tier.}

\item{focus_tier}{For which tier(s) should dotted lines be shown on all
acoustic plots giving the locations of boundaries? Vector of number or
strings giving either numeric identifiers
of TextGrid tiers or the names of TextGrid tiers to plot. Default is
\code{tiers[1]}, i.e. the first tier given in the \code{tiers} argument. Additionally
accepts the string \code{none},
in which case no dotted lines are shown on acoustic plots, and \code{all}, in
which case dotted lines from all tiers are shown on acoustic plots.}

\item{tier_names}{Logical; should TextGrid tier names be printed along the
y-axis? Default is \code{TRUE}.}

\item{freqrange}{Vector of two integers giving the frequency range to be
used for plotting spectrograms. Default is \code{c(0,5000)}.}

\item{windowlength}{Window length in seconds for generating spectrograms.
Default is \code{0.005}.}

\item{dynamicrange}{Dynamic range in dB for generating spectrograms. The
maximum intensity minus \code{dynamicrange} will all be printed in white. Default
is \code{50}.}

\item{timestep}{How many time steps should be calculated for spectrograms?
Default is \code{1000}. Note that this takes a while to plot, so for fiddling with
plotting parameters it is a good idea to choose a smaller value.}

\item{windowshape}{String giving the name of the window shape to be applied
to the signal when generating spectrograms. Default is \code{Gaussian}; other
options are \code{square}, \code{Hamming}, \code{Bartlett}, or \code{Hanning}.}

\item{pitchtype}{String giving the type of pitch plot to produce; default
is \code{draw} (a line plot), the only other option is \code{speckle} (a point plot).}

\item{pitchscale}{String giving the frequency scale to use when producing
pitch plots. Default is \code{hz}; other options are \code{logarithmic} (also in Hz),
\code{semitones}, \code{erb}, and \code{mel}.}

\item{pitchrange}{Vector of two integers giving the frequency range to be
used for producing pitch plots. Default is \code{c(50,500)}. If the frequency
scales \code{semitones} or \code{erb} are used, the pitch range is automatically reset
to the Praat defaults for these scales (\code{c(-12,30)} and \code{c(0,10)},
respectively).}

\item{semitones_re}{Frequency in Hz giving the reference level for converting
pitch frequency to semitones. Default is \code{100}.}

\item{formant_dynrange}{Dynamic range in dB for producing formant plots.
When a formant plot of \code{formanttype='speckle'} is drawn, no formants are
shown in frames with intensity level \code{formant_dynrange} below the maximum
intensity. Default is \code{30}. If set to \code{0}, all formants are shown.}

\item{formantrange}{Vector of two integers giving the frequency range to be
used for producing formant plots. Default is \code{c(0,5500)}.}

\item{formanttype}{String giving the type of formant plot to produce;
default is \code{speckle} (a point plot), the only other option is \code{draw} (a line
plot).}

\item{formants_on_spec}{Boolean; should formants be plotted on top of
spectrogram? Default is \code{FALSE}.}

\item{intensityrange}{Vector of two integers giving the intensity range to be
used for producing intensity plots. Default is \code{NULL}, in which case the
range is simply the minimum and maximum levels in the curve.}

\item{draw_rectangle}{Use for drawing rectangles on plot components. A
vector containing a) a string giving the plot component to draw a rectangle
on, and b) arguments to pass on to \link[graphics:rect]{graphics::rect}. Alternatively a list
of such vectors, if more rectangle should be drawn.}

\item{draw_arrow}{Use for drawing arrows on plot components. A vector
containing a) a string giving the plot component to draw an arrow on, and
b) arguments to pass on to \link[graphics:arrows]{graphics::arrows}. Alternatively a list of
such vectors, if more arrows should be drawn.}

\item{tg_alignment}{String giving the desired alignment of text in the
TextGrids. Default is \code{central}; other options are \code{left} and \code{right}.
Alternatively, a vector of strings if different alignments are needed.}

\item{...}{Further global plotting arguments passed on to \code{par()}.}
}
\description{
Generate plots of acoustic data aligned with transcriptions similar
to those made with Praat Picture. The default is to produce a plot with a
relatively small waveform, somewhat larger spectrogram, and the first tier
of a TextGrid.
}
\examples{
praatpicture('inst/extdata/1.wav')
}
\seealso{
Functions from \code{rPraat} are used to load in files created with
Praat. Spectrograms are generated using \link[phonTools:spectrogram]{phonTools::spectrogram}.
}
